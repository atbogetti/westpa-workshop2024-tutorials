# The master WEST configuration file for a simulation.
# vi: set filetype=yaml :
---
west:
  #we:
  #  largest_allowed_weight:  0.1
  #  smallest_allowed_weight: 1e-40
  #  adjust_counts:           true
 #drivers:
    #module_path: $WEST_SIM_ROOT
    #sim_manager: binless_manager.BinlessSimManager
    # we_driver: driver.CustomDriver
    #  subgroup_function: group.ls_kmeans
    #  subgroup_arguments:
    #    n_clusters:              5
    #    dmatrix_map:             ntl9_folding_synd/dmatrix_map.pkl
    #    synd_model:              ntl9_folding_synd/ntl9_folding.synd
    #    iters_back_to_cluster:   10
  system:
    driver: westpa.core.systems.WESTSystem
    system_options:
      # Dimensionality of your progress coordinate
      pcoord_ndim: 1
      # Number of data points per iteration
      pcoord_len: 11
      # Data type for your progress coordinate
      pcoord_dtype: !!python/name:numpy.float32
      bins:
        type: RectilinearBinMapper
        boundaries:
          # Full, working bin edges, CA-RMSD
          # - [0.0, 1., 1.1,  1.2, 1.3, 1.4, 1.5,1.6, 1.7, 1.8, 1.9,
          #    2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 
          #    3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9,
          #    4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 
          #    4.6, 4.8, 5.0, 5.2, 5.4, 5.6, 5.8, 6.0, 6.2, 6.4,
          #    6.6, 7.2, 7.8, 8.4, 9.0, 9.6, 10.2, 'inf']
          # More minimal CA-RMSD
           - [0, 1, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 10., 'inf']
          # For testing, probably not working well, CA-RMSD
          #- [0, 1, 5, 10, 'inf']

          # FOR SASA
          #- [0, 500, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 'inf']


        # Uncomment for MAB
        # type: RecursiveBinMapper
        # base:
        #   type: RectilinearBinMapper
        #   boundaries:
        #     - [0, 1.0, 10.0, 'inf']
        # mappers:
        #   - type: MABBinMapper
        #     nbins: [5]
        #     at: [5.0]
        #     direction: [-1]
      # Number walkers per bin
      bin_target_counts: 4
  propagation:
    max_total_iterations: 50
    max_run_wallclock:    48:00:00
    propagator:           executable
    # Following is only needed when you want to use the SynD plugin 
    #propagator:           synd.westpa.propagator.SynMDPropagator
    #parameters:
    #  synd_model:         ntl9_folding_synd/ntl9_folding.synd
    #  topology:           ntl9_folding_synd/ntl9.pdb
    gen_istates:          false
  data:
    west_data_file: west.h5
    datasets:
      - name:        pcoord
        scaleoffset: 4
      - name:        rmsd
        scaleoffset: 4
      - name:        state_indices
        dtype:       uint16
      - name:        sasa
        scaleoffset: 4
    data_refs:
      iteration:     $WEST_SIM_ROOT/traj_segs/iter_{n_iter:06d}.h5
      segment:       $WEST_SIM_ROOT/traj_segs/{segment.n_iter:06d}/{segment.seg_id:06d}
      basis_state:   $WEST_SIM_ROOT/bstates/{basis_state.auxref}
      initial_state: $WEST_SIM_ROOT/istates/{initial_state.iter_created}/{initial_state.state_id}.rst
  executable:
    environ:
      PROPAGATION_DEBUG: 1
    datasets:
      - name:    rmsd
        enabled: true
      - name:    state_indices
        enabled: true
      - name:    coord
        enabled: true
        loader:  npy_data_loader
      - name:    sasa
        enabled: true
    propagator:
      executable: $WEST_SIM_ROOT/westpa_scripts/runseg.sh
      stdout:     $WEST_SIM_ROOT/seg_logs/{segment.n_iter:06d}-{segment.seg_id:06d}.log
      stderr:     stdout
      stdin:      null
      cwd:        null
      environ:
        SEG_DEBUG: 1
    get_pcoord:
      executable: $WEST_SIM_ROOT/westpa_scripts/get_pcoord.sh
      stdout:     $WEST_SIM_ROOT/get_pcoord.log
      stderr:     stdout
    gen_istate:
      executable: $WEST_SIM_ROOT/westpa_scripts/gen_istate.sh
      stdout:     /dev/null
      stderr:     stdout
    post_iteration:
      enabled:    true
      executable: $WEST_SIM_ROOT/westpa_scripts/post_iter.sh
      stderr:     stdout
    pre_iteration:
      enabled:    false
      executable: $WEST_SIM_ROOT/westpa_scripts/pre_iter.sh
      stderr:     stdout
  # Settings for w_ipa, an interactive analysis program that can also automate analysis.
  analysis:
    directory: ANALYSIS                # specify the directory all analysis files should exist in.
    kinetics:                          # general options for both kinetics routines.
      step_iter: 1
      evolution: cumulative
      extra: [ 'disable-correl' ]
    analysis_schemes:                  # Analysis schemes.  Required: name (TEST), states, and bins
      TEST:
        enabled: True
        bins:
          - type: RectilinearBinMapper
            boundaries:
              - [0, 1.0, ] 
              - [0, 'inf']
        states:
          - label: C7_eq
            coords:
              - [195, 60]
              - [195, 95]
              - [255, 60]
              - [255, 95]
          - label: C7_ax
            coords:
              - [30,310]

